#------------------------------
#-- demo-darby1.yaml
#-- Petite démo ESPhome sur un ESP mini-d1 à Darby
#-- Cherche des consignes sur le Home Assistant
#-- et fait une petite détection de dépassement avec alarme sur Telegram
#-- 
#-- zf220522.1855
#--

esphome:
  name: demo-darby1

esp8266:
  board: esp01_1m
  restore_from_flash: false
  
preferences:
  flash_write_interval: 10s

# Configuration WIFI
wifi:
#  ssid: !secret wifi_ssid_apzuzu7
#  password: !secret wifi_pass_apzuzu7

  networks:
  - ssid: !secret wifi_ssid_apzuzu7
  - password: !secret wifi_pass_apzuzu7
  
  #   - ssid: !secret wifi_ssid_apzuzu6
  #   - password: !secret wifi_pass_apzuzu6
  
  - ssid: !secret wifi_ssid_3G_zf
  - password: !secret wifi_pass_3G_zf2
  
  - ssid: !secret wifi_ssid_3G_zf2
  - password: !secret wifi_pass_3G_zf2
  
  - ssid: !secret wifi_ssid_3g_s7
  - password: !secret wifi_pass_3g_s7
  
  #   - ssid: !secret wifi_ssid_apzuzu6_EXT
  #   - password: !secret wifi_pass_apzuzu6_EXT


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "esp32-ble-hub1 fallback"
    password: !secret ap_wifi_password

# Enable wifi configuration fallback
captive_portal:

# Enable logging
logger:
    level: VERBOSE

# Enable Home Assistant API
api:
  password: !secret api_password

# Enable OTA updates
ota:
  password: !secret ota_password

# Enable WEB Server
web_server:
  port: 80



# Définition des Switch's
switch:
  - platform: gpio
    name: "demo-darby1 LED"
    inverted: True
    id: led
    pin: GPIO2

  - platform: restart
    name: "demo-darby1 Restart"

  - platform: template
    name: "demo-darby1 quittance alarme"
    restore_state: true
    optimistic: true
    id: demo_darby1_quittance_alarme


# Définition des Sensors
sensor:
  - platform: wifi_signal
    name: "demo-darby1 Signal Wi-Fi"
    update_interval: 60s

  - platform: uptime
    name: "demo-darby1 uptime"
    update_interval: 60s


# Définition des Sensors text
text_sensor:
  - platform: version
    name: "demo-darby1 Version"

  - platform: wifi_info
    ip_address:
      name: demo-darby1 IP Address
      id: wifi_ip
    ssid:
      name: demo-darby1 Connected SSID
      id: wifi_ssid

# Définition des inputs numbers
number:
  - platform: template
    name: "demo-darby1 consigne"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 100
    step: 1
    id: demo_darby1_consigne

  - platform: template
    name: "demo-darby1 hysterese"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 100
    step: 1
    id: demo_darby1_hysterese

  - platform: template
    name: "demo-darby1 poids"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 100
    step: 1 
    id: demo_darby1_poids
    
    
  
  # Boucle de régulation
interval:
  - interval: 1s
    then:
      - if:
          condition:
            lambda: 'return id(demo_darby1_poids).state < id(demo_darby1_consigne).state;'
          then:
            - if:
                condition:
                  lambda: 'return id(demo_darby1_quittance_alarme).state == 0;'
                then:
                - logger.log: "Une reine a quitté la ruche !"
                - switch.turn_on: demo_darby1_quittance_alarme
          else:
             - if:
                condition:
                  lambda: 'return id(demo_darby1_quittance_alarme).state == 1;'
                then:
                - logger.log: "On revient comme avant !"
                - switch.turn_off: demo_darby1_quittance_alarme
         
  
  
    
    
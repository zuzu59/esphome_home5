# zf210517.1614
# sources: 
# https://community.home-assistant.io/t/using-ttgo-epaper-display-with-esphome/168877
# https://github.com/esphome/issues/issues/1458
# https://github.com/lewisxhe/Esp-badge/blob/3dcb646971/schematic/T5_V2.3.pdf
# http://www.lilygo.cn/prod_view.aspx?TypeId=50031&Id=1149&FId=t3:50031:3
# https://fr.aliexpress.com/item/32869729970.html
# https://github.com/Xinyuan-LilyGO/LilyGo-T5-Epaper-Series?spm=a2g0o.detail.1000023.17.6b1d6399uhwyEP
# https://github.com/lewisxhe/GxEPD/blob/master/src/GxDEPG0213BN/GxDEPG0213BN.h
# https://www.e-paper-display.com/GDEH0213B72%20V1.1%20Specification4d82.pdf
# https://www.good-display.com/product/218.html
# https://esphome.io/components/binary_sensor/esp32_touch.html


esphome:
  name: elink_1
  platform: ESP32
  board: esp32dev

# Configuration WIFI
wifi:
  networks:
  - ssid: !secret wifi_ssid
  - password: !secret wifi_password
  - ssid: !secret wifi_ssid2
  - password: !secret wifi_password2
  - ssid: !secret wifi_ssid3
  - password: !secret wifi_password3
  - ssid: !secret wifi_ssid4
  - password: !secret wifi_password4
  - ssid: !secret wifi_ssid5
  - password: !secret wifi_password5
  - ssid: !secret wifi_ssid6
  - password: !secret wifi_password6

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "elink_1 Fallback Hotspot"
    password: !secret ap_wifi_password

captive_portal:

# Enable logging
logger:
#    level: VERBOSE

# Enable Home Assistant API
api:
  password: !secret api_password

# Enable OTA
ota:
  password: !secret ota_password

# WEB Server
web_server:
  port: 80

# Serveur date et heure
time:
  - platform: sntp
    id: sntp_time

# Définition des sensors
sensor:
  - platform: wifi_signal
    name: "elink_1 Signal Wi-Fi"
    id: wifi_power
    update_interval: 10s
  - platform: uptime
    name: "elink_1 uptime"
    update_interval: 60s



  - platform: homeassistant
    name: "elink_1 Inside Temp"
    entity_id: sensor.th5_temperature
    id: inside_temperature

  - platform: homeassistant
    name: "elink_1 Inside Hum"
    entity_id: sensor.th5_humidite
    id: inside_humidity

  - platform: homeassistant
    name: "elink_1 Inside WIFI"
    entity_id: sensor.th5_signal_wi_fi
    id: inside_wifi



  - platform: homeassistant
    name: "elink_1 Outside Temp"
    entity_id: sensor.th1_8285_temperature
    id: outside_temperature

  - platform: homeassistant
    name: "elink_1 Outside Hum"
    entity_id: sensor.th1_8285_humidite
    id: outside_humidity

  - platform: homeassistant
    name: "elink_1 Outside WIFI"
    entity_id: sensor.th1_8285_signal_wi_fi
    id: outside_wifi

  - platform: homeassistant
    name: "elink_1 Outside BAT"
    entity_id: sensor.th1_8285_vcc_voltage
    id: outside_bat



  - platform: homeassistant
    name: "Boiler Temp"
    entity_id: sensor.sonoff_10006d1001_temperature
    id: boiler_temp
  - platform: homeassistant
    name: "PVS total power"
    entity_id: sensor.powermon_totalsolar_kw
    id: pvs_pwr_total
  - platform: homeassistant
    name: "PVS toit power"
    entity_id: sensor.sonoff_1000645a68_power
    id: pvs_pwr_toit
  - platform: homeassistant
    name: "PVS jardin power"
    entity_id: sensor.sonoff_1000cd8a10_power
    id: pvs_pwr_jardin
  - platform: homeassistant
    name: "elink_1 TVOC"
    entity_id: sensor.co2_72_tvoc
    id: tvoc

# Définitions des texts sensors
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ESP IP Address
      id: wifi_ip
    ssid:
      name: ESP Connected SSID
      id: wifi_ssid

# Définition du bouton physique
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      mode: INPUT_PULLUP
      inverted: True
    name: "btn e-link refresh"
    on_press:
      - component.update: z_elink

# Définition du bouton virtuel
switch:
  - platform: template
    name: "switch e-link refresh"
    turn_on_action:
      - component.update: z_elink
    
# Définition des polices de caractères
font:
  - file: 'arialn.ttf'
    id: font1
    size: 11
  - file: 'arialn.ttf'
    id: font2
    size: 13
    # caractères français
    glyphs: "+\"*ç%&/()=?'!$;:_,.-<>° 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzàâäéèêëïîôöùûüÿ"
  - file: "Ldfcomicsans-jj7l.ttf"
    id: font_cs
    size: 20
#  - file: "arial_th.ttf"
#    id: font_arth
#    size: 16

# Définition du display e-link
spi:
  clk_pin: 18
  mosi_pin: 23

display:
#   model: 2.90inv2    #c'est ceci qui marche avec mon e-link TTGO T5 V2.3.1 _ 2.13 zf210505.0002
#   https://github.com/lewisxhe/GxEPD/blob/master/src/GxDEPG0213BN/GxDEPG0213BN.h
#   J'ai comme résolution utilisable: 250x122 !   note: 128*250, the visible number of display pixels is 122*250, see GDEH0213B72 V1.1 Specification.pdf
  - platform: waveshare_epaper
    cs_pin: 5
    dc_pin: 17
    busy_pin: 4
    reset_pin: 16
    model: 2.90inv2
    id: z_elink
    rotation: 90°
    full_update_every: 1
    update_interval: 300s

#   http://www.linux-france.org/prj/embedded/sdcc/sdcc_course.formatted_io.html, pour se souvenir le formatage de printf ;-)
    lambda: |-
      int label_x0 = 0;       int label_y0 = 25;
      int label_with = 62;    int label_height = 30;
      int label_xidx = 1;     int label_yidx = 1;
      
      // Print header, title and version
      it.print(0, 4, id(font2), TextAlign::TOP_LEFT, "Mini dashboard Crissier");
      it.print(250, 4, id(font1), TextAlign::TOP_RIGHT, "ver 210517.161145");



      // Print inside temperature
      label_xidx = 1;      label_yidx = 1;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "In temp");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.1f°C", id(inside_temperature).state);

      // Print inside humidity
      label_xidx = 2;      label_yidx = 1;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "In hum");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.0f%%", id(inside_humidity).state);

      // Print inside wifi
      label_xidx = 3;      label_yidx = 1;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "In wifi");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.0fdB", id(inside_wifi).state);



      // Print outside temperature
      label_xidx = 1;      label_yidx = 2;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "Out temp");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.1f°C", id(outside_temperature).state);

      // Print outside humidity
      label_xidx = 2;      label_yidx = 2;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "Out hum");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.0f%%", id(outside_humidity).state);

      // Print outside wifi
      label_xidx = 3;      label_yidx = 2;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "Out wifi");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.0fdB", id(outside_wifi).state);

      // Print outside voltage
      label_xidx = 4;      label_yidx = 2;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "Out bat");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.2fV", id(outside_bat).state);



      // Print PVS power total
      label_xidx = 1;      label_yidx = 3;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "PVS Ptot");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.1fkW", id(pvs_pwr_total).state);

      // Print PVS power toit
      label_xidx = 2;      label_yidx = 3;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "PVS Ptoit");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.1fW", id(pvs_pwr_toit).state);

      // Print PVS power jardin
      label_xidx = 3;      label_yidx = 3;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "PVS Pjard");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.1fW", id(pvs_pwr_jardin).state);

      // Print boiler temperature
      label_xidx = 4;      label_yidx = 3;
      it.rectangle(label_x0+(label_xidx-1)*label_with, label_y0+(label_yidx-1)*label_height, label_with-1, label_height-1, COLOR_ON);
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height, id(font1), TextAlign::TOP_CENTER, "Boiler");
      it.printf(label_x0+(label_xidx-1)*label_with+label_with/2, label_y0+(label_yidx-1)*label_height+10, id(font1), TextAlign::TOP_CENTER , "%.1f°C", id(boiler_temp).state);


      // Print footer, WIFI SSID, signal, adrs ip, date, time
      it.printf(0, 131, id(font1), TextAlign::BOTTOM_LEFT, "%s %.0f dB %s", id(wifi_ssid).state.c_str(), id(wifi_power).state, id(wifi_ip).state.c_str() );
      it.strftime(250, 131, id(font1), TextAlign::BOTTOM_RIGHT, "%d-%m-%y %H:%M:%S", id(sntp_time).now());


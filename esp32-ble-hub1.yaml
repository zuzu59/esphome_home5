#------------------------------
#-- esp32-ble-hub1.yaml
#-- Code pour une esp32-cam pour tester un BLE tracker, un hub BLE (iBeacon)
#-- Je squate une esp32-cam comme un esp32 simple avec Bluetooth 
#-- zf220115.2112
#--


# sources: 
# 

esphome:
  name: esp32-ble-hub1
  project:
    name: "zf.esp32-ble-hub1"
    version: "1.0.0"

esp32:
  board: esp32cam
  framework:
    type: arduino


# Configuration WIFI
wifi:
#   ssid: !secret wifi_ssid_apzuzu7
#   password: !secret wifi_pass_apzuzu7

  networks:
  
    - ssid: !secret wifi_ssid_apzuzu7
    - password: !secret wifi_pass_apzuzu7
    
    - ssid: !secret wifi_ssid_apzuzu6
    - password: !secret wifi_pass_apzuzu6
    
    - ssid: !secret wifi_ssid_3G_zf
    - password: !secret wifi_pass_3G_zf2
    
    - ssid: !secret wifi_ssid_3G_zf2
    - password: !secret wifi_pass_3G_zf2
    
    - ssid: !secret wifi_ssid_3g_s7
    - password: !secret wifi_pass_3g_s7
    
    - ssid: !secret wifi_ssid_apzuzu6_EXT
    - password: !secret wifi_pass_apzuzu6_EXT


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "esp32-ble-hub1 Fallback"
    password: !secret ap_wifi_password

captive_portal:

# Enable logging
logger:
  level: VERBOSE
#  level: VERY_VERBOSE
  logs:
    logger: INFO
    adc: INFO
    captive_portal: INFO
    deep_sleep: INFO
    htu21d: INFO
    i2c: INFO
    ota: INFO
    restart: INFO
    sensor: INFO
    switch: INFO
    switch.gpio: INFO
    uptime.sensor: INFO
    web_server: INFO
    wifi_signal.sensor: INFO
    mqtt: INFO
    mqtt.component: INFO
    mqtt.client: INFO
    mqtt.switch: INFO
 

# Enable Home Assistant API
api:
  password: !secret api_password

# Enable OTA
ota:
  password: !secret ota_password

# WEB Server
web_server:
  port: 80


# Définition des Switch's
switch:
  - platform: restart
    name: "esp32-ble-hub1 Restart"

  - platform: gpio
    name: "esp32-ble-hub1 LED"
    inverted: True
    id: led
    pin: GPIO33

  - platform: gpio
    name: "esp32-ble-hub1 LED FLASH"
#    inverted: True
    id: led_flash
    pin: GPIO4
    
  - platform: gpio
    name: "esp32-ble-hub1 cam power"
    inverted: True
    id: cam_power
    pin: GPIO32




esp32_ble_tracker:
  scan_parameters:
    duration: 66s




# Définition des sensors
sensor:
  - platform: wifi_signal
    name: "esp32-ble-hub1 Signal Wi-Fi"
    update_interval: 60s

  - platform: uptime
    name: "esp32-ble-hub1 uptime"
    update_interval: 60s


  - platform: ble_rssi
    name: "BLE SumUp 835 RSSI value"
    mac_address: EF:D4:55:26:8C:27
  - platform: ble_rssi
    name: "BLE Tile 1 RSSI value"
    mac_address: E0:AA:01:F9:AF:62
  - platform: ble_rssi
    name: "BLE Tile 2 RSSI value"
    mac_address: E1:B0:A7:F3:63:03

  - platform: ble_rssi
    name: "BLE Beacon 4 RSSI value"
    service_uuid: '4e8cc6b3-490a-4d35-b7cc-282ba9265748'







# Définition des text sensors
text_sensor:
  - platform: version
    name: "esp32-ble-hub1 Version"

  - platform: wifi_info
    ip_address:
      name: esp32-ble-hub1 IP Address
      id: wifi_ip
    ssid:
      name: esp32-ble-hub1 Connected SSID
      id: wifi_ssid


#  - platform: ble_scanner
#    name: "BLE Devices Scanner"



# Définition des binary sensors
binary_sensor:
  - platform: status
    name: "esp32-ble-hub1 Status"

  - platform: ble_presence
    name: "BLE SumUp 835"
    mac_address: EF:D4:55:26:8C:27
  - platform: ble_presence
    name: "BLE Tile 1"
    mac_address: E0:AA:01:F9:AF:62
  - platform: ble_presence
    name: "BLE Tile 2"
    mac_address: E1:B0:A7:F3:63:03
  - platform: ble_presence
    name: "BLE Beacon 4"
    service_uuid: '4e8cc6b3-490a-4d35-b7cc-282ba9265748'





#zf210208.1701
# source: https://esphome.io/cookbook/display_time_temp_oled.html

esphome:
  name: tst_d1_disp1
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
#  power_save_mode: none
#  fast_connect: on
#  output_power: 20

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "tst_d1_disp1 Fallback Hotspot"
    password: !secret ap_wifi_password

captive_portal:

# Enable logging
logger:
#    level: VERBOSE


# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password


# Définitions des actions Switch
switch:
  - platform: gpio
    name: "tst_d1_disp1 LED"
    inverted: True
    id: led
    pin: D4

  - platform: restart
    name: "tst_d1_disp1 Restart"

# Définition du bouton physique
binary_sensor:
  - platform: gpio
    pin:
      number: D3
      mode: INPUT_PULLUP
      inverted: True
    name: "tst_d1_disp1 button"
    on_press:
      - switch.toggle: led

# WEB Server
web_server:
  port: 80


# Récupération de l'heure de Home Assistant
time:
  - platform: homeassistant
    id: esptime
    
sensor:
  - platform: wifi_signal
    name: "tst_d1_disp1 Signal Wi-Fi"
    update_interval: 60s
  - platform: uptime
    name: "tst_d1_disp1 uptime"
    update_interval: 60s
  - platform: homeassistant
    name: "tst_d1_disp1 Outside Temp"
    id: outside_temperature
    entity_id: sensor.weather_temp
#    internal: true
  - platform: homeassistant
    name: "tst_d1_disp1 Inside Temp"
    entity_id: sensor.th5_temperature
    id: inside_temperature
  - platform: homeassistant
    name: "tst_d1_disp1 TVOC"
    entity_id: sensor.co2_72_tvoc
    id: tvoc

text_sensor:
  - platform: homeassistant
    entity_id: input_text.text1
    name: "tst_d1_disp1 Alarm State"
    id: alarm_state




font:
#https://github.com/JotJunior/PHP-Boleto-ZF2/blob/master/public/assets/fonts/arial.ttf
  - file: 'arialn.ttf'
    id: font1
    size: 10
  - file: 'arialn.ttf'
    id: font2
    size: 13

i2c:
  sda: D2
  scl: D1
  scan: False

display:
# http://www.esp8266learning.com/wemos-oled-shield-example.php
# https://esphome.io/api/namespaceesphome_1_1display.html
  - platform: ssd1306_i2c
    model: "SSD1306 64x48"
    address: 0x3C
    lambda: |-

      // Print "Hello Zuzu" for fonts tests in top center.
      //it.printf(32, 0, id(font1), TextAlign::TOP_CENTER, "Hello Zuzu");

      // Print inside temperature (from homeassistant sensor)
      it.printf(0, 7, id(font1), TextAlign::BASELINE_LEFT, "In side");
      if (id(inside_temperature).has_state()) {
        it.printf(64, 7, id(font1), TextAlign::BASELINE_RIGHT , "%.1f°C", id(inside_temperature).state);
      }

      // Print outside temperature (from homeassistant sensor)
      it.printf(0, 16, id(font1), TextAlign::BASELINE_LEFT, "Out side");
      if (id(outside_temperature).has_state()) {
        it.printf(64, 16, id(font1), TextAlign::BASELINE_RIGHT , "%.1f°C", id(outside_temperature).state);
      }      
      
      // Print TVOC (from homeassistant sensor)
      it.printf(0, 25, id(font1), TextAlign::BASELINE_LEFT, "TVOC");
      if (id(outside_temperature).has_state()) {
        it.printf(64, 25, id(font1), TextAlign::BASELINE_RIGHT , "%.0f", id(tvoc).state);
      }      

      // Print "L'état du input text de HA: <state>" in midle center
      it.printf(32, 36, id(font2), TextAlign::BASELINE_CENTER, "%s", id(alarm_state).state.c_str());

      // Print time in HH:MM format
      it.strftime(32, 48, id(font1), TextAlign::BOTTOM_CENTER, "%d-%m %H:%M:%S", id(esptime).now());

    
#unavailable


